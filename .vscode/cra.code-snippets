{
  "react-function-component-skeleton": {
    "scope": "typescriptreact",
    "prefix": "rfc",
    "body": [
      "import { FC } from 'react'",
      "import * as s from './styled'",
      "",
      "type ${TM_FILENAME_BASE}$1Props = {",
      " className?: string",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}$1: FC<${TM_FILENAME_BASE}$1Props> = ({ className }) => {",
      " return <s.Root className={className}>${TM_FILENAME_BASE}$1</s.Root>",
      "}",
      ""
    ]
  },
  "react-hook-skeleton": {
    "scope": "typescript",
    "prefix": "hook",
    "body": [
      "type ${TM_FILENAME_BASE}$1Props = {",
      "",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}$1 = ({}: ${TM_FILENAME_BASE}$1Props) => {",
      " return {}",
      "}",
      ""
    ]
  },
  "react-styled-components-skeleton": {
    "scope": "typescript",
    "prefix": "rsc",
    "body": ["import styled from 'styled-components'", "", "export const Root = styled.div``"]
  },
  "react-export-const-skeleton": {
    "scope": "typescript",
    "prefix": "ec",
    "body": ["export const "]
  },
  "redux-reducer-skeleton": {
    "scope": "typescript",
    "prefix": "rrs",
    "body": [
      "const CHANGE_${TM_FILENAME_BASE/(.*)/${1:/upcase}/} = 'timer/CHANGE_TAB' as const",
      "",
      "export const change${TM_FILENAME_BASE}$1 = () => ({ type: CHANGE_${TM_FILENAME_BASE/(.*)/${1:/upcase}/} })",
      "",
      "type ${TM_FILENAME_BASE}$1Action = ReturnType<typeof change${TM_FILENAME_BASE}$1>",
      "",
      "type ${TM_FILENAME_BASE}$1State = { currentTab: number }",
      "",
      "const InitialState: ${TM_FILENAME_BASE}$1State = {currentTab: 0,}",
      "",
      "function ${TM_FILENAME_BASE}(state: ${TM_FILENAME_BASE}$1State = InitialState, action: ${TM_FILENAME_BASE}$1Action) {",
      "",
      "switch (action.type) {",
      "",
      "case CHANGE_${TM_FILENAME_BASE/(.*)/${1:/upcase}/}: return ",
      "",
      "default: return state}",
      "",
      "}",
      "",
      "export default ${TM_FILENAME_BASE}"
    ]
  },
  "react-post-axios": {
    "scope": "typescript",
    "prefix": "api-post",
    "body": [
      "import { axiosPOST } from 'api/common/commonAxios'",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps = {",
      "",
      "}",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1ResponseProps = {",
      "",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}$1 = ({}: ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps) => {",
      "  return axiosPOST('', {})",
      "}"
    ]
  },
  "react-get-axios": {
    "scope": "typescript",
    "prefix": "api-get",
    "body": [
      "import { axiosGET } from 'api/common/commonAxios'",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps = {",
      "",
      "}",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1ResponseProps = {",
      "",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}$1 = (req: ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps) => {",
      "  return axiosGET('', req)",
      "}"
    ]
  },
  "react-delete-axios": {
    "scope": "typescript",
    "prefix": "api-delete",
    "body": [
      "import { axiosDELETE } from 'api/common/commonAxios'",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps = {",
      "",
      "}",
      "",
      "export type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1ResponseProps = {",
      "",
      "}",
      "",
      "export const ${TM_FILENAME_BASE}$1 = (req: ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}$1RequestProps) => {",
      "  return axiosDELETE('', req)",
      "}"
    ]
  },
  "react-query-mutation": {
    "scope": "typescript",
    "prefix": "mutation",
    "body": [
      "import { useQueryClient, useMutation } from 'react-query'",
      "",
      "type ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}Props = ${1:RequestProps}",
      "",
      "/**$4 */",
      "function ${TM_FILENAME_BASE}() {",
      " const queryClient = useQueryClient()",
      " const { mutate } = useMutation(({$2}: ${TM_FILENAME_BASE/^(.)(.*)$/${1:/upcase}${2}/}Props) => ${3:api}({$2}), {",
      "   onMutate: ({$2}) => {",
      "   //",
      "   },",
      "   onSuccess: (data, {$2}) => {",
      "     console.log('success')",
      "   },",
      "   onError: (err, {$2}, context) => {",
      "     console.error(err)",
      "   }",
      "  })",
      "  return mutate",
      "}",
      "export default ${TM_FILENAME_BASE}"
    ],
  },
    "media-query-desktop": {
      "scope": "css",
      "prefix": "desktop",
      "body": [
        " @media screen and (${(props) => props.theme.desktop}) {",
        "$1",
        "}",
      ]
    },
    "media-query-tablet": {
      "scope": "css",
      "prefix": "tablet",
      "body": [
        " @media screen and (${(props) => props.theme.tablet}) {",
        "$1",
        "}",
      ]
    },
    "media-query-mobile": {
      "scope": "css",
      "prefix": "mobile",
      "body": [
        " @media screen and (${(props) => props.theme.mobile}) {",
        "$1",
        "}",
      ]
    },
  }

